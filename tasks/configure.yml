---
# tasks/configure.yml (nginxv3)
# Prefix : nginxv3

- name: "Create directories"
  file:
    path: "{{ item.path }}"
    state: "directory"
    mode: "{{ item.mode | default('0755') }}"
    owner: "{{ item.owner | default('root') }}"
    group: "{{ item.group | default('root') }}"
  loop: "{{ nginxv3_all_create_directories }}"

- name: "Create dummy ssl or Deploy ssl from localhost (your pc)"
  include_tasks: >-
    {{ ssl_conf.value.src_dir is none |
      ternary('create_dummy_ssl_keys.yml', 'deploy_ssl_keys.yml') }}
  loop: "{{ nginxv3_merged_ssl_confs | dict2items }}"
  loop_control:
    loop_var: "ssl_conf"

- name: "Create DH-parameter"
  openssl_dhparam:
    path: "{{ item.value.dest_dir ~ '/' ~ item.value.dhparam.file }}"
    size: "{{ item.value.dhparam.size | default('2048') }}"
    owner: "root"
    group: "root"
    mode: "0600"
    force: no
  when: "item.value.dhparam is not none"
  loop: "{{ nginxv3_merged_ssl_confs | dict2items }}"
  notify: "nginxv3 reload nginx"

- name: "Set nginx.conf"
  template:
    src: "nginx.conf.j2"
    dest: "/etc/nginx/nginx.conf"
    mode: "0644"
  notify: "nginxv3 reload nginx"

- name: "Set vhost for dummy"
  template:
    src: "vhost_dummy.conf.j2"
    dest: "/etc/nginx/conf.d/dummy.conf"
    mode: "0644"
  when: nginxv3_use_dummy_vhost | bool
  notify: "nginxv3 reload nginx"

- name: "Not use dummy.conf"
  file:
    path: "/etc/nginx/conf.d/dummy.conf"
    state: "absent"
  when: not nginxv3_use_dummy_vhost | bool
  notify: "nginxv3 reload nginx"

- name: "Set vhost for backlog"
  template:
    src: "vhost_backlog.conf.j2"
    dest: "/etc/nginx/conf.d/backlog.conf"
    mode: "0644"
  notify: "nginxv3 reload nginx"

- name: "Set user-defined vhost config file"
  template:
    src: "{{ nginxv3_vhost_src_dir ~ '/' ~ item }}"
    dest: "{{ '/etc/nginx/conf.d/' ~ item }}"
    mode: "0644"
  loop: "{{ nginxv3_vhost_list }}"
  notify: "nginxv3 reload nginx"

- name: "Check nginx conf file syntax"
  command: "nginx -t"
  register: _check_nginx_syntax
  changed_when: false
  check_mode: no
  failed_when: "'test failed' in _check_nginx_syntax.stderr"

- name: "nginx start"
  systemd:
    name: "nginx.service"
    enabled: yes
    state: "started"
